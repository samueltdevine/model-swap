/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFBX } from "@react-three/drei";
import { MeshBasicMaterial } from "three";
import * as THREE from "three";

export default function Model({ ...props }) {
  const group = useRef();
  const { currentNum, currentIntakeNum, currentExhaustNum } = props;
  const fbx = useFBX("/CXT_GAF_RidgeVentHouse_SD_11.fbx");
  // debugger;
  var whiteMat = new THREE.MeshBasicMaterial({ color: "white" });
  const products = fbx.children.find((group) => group.name === "Products");
  const intakes = products.children[0];
  const exhaust = products.children[1];
  const house = fbx.children.find((group) => group.name === "House");
  return (
    <group ref={group} scale={0.001} {...props} dispose={null}>
      {/* <primitive object={products} /> */}
      {/* <primitive object={house} /> */}
      {/* <group position={[0, 56.57, 0]}>
        <group position={[0, 56.57, 0]}>
          {currentNum === 1 && (
            <mesh
              geometry={nodes.stack1.geometry}
              material={nodes.stack1.material}
              position={[0, -53.6, 0]}
            />
          )}
          {currentNum === 2 && (
            <mesh
              geometry={nodes.stack2.geometry}
              material={nodes.stack2.material}
            />
          )}
          {currentNum === 3 && (
            <mesh
              geometry={nodes.stack3.geometry}
              material={nodes.stack3.material}
            />
          )}
        </group>
        <mesh
          geometry={nodes.cube1.geometry}
          material={nodes.cube1.material}
          position={[0, -56.57, 0]}
        />
      </group> */}
    </group>
  );
}

useGLTF.preload("/yoo4.gltf");
